[[{"l":"General","p":["Azure Event Hubs are a great event streaming and messaging system, connecting consumers with producers in a decoupled manner.","In production-grade systems it must be monitored if consumers can keep up with producers or if they are falling behind. In traditional messaging systems like Azure Service Bus or Apache ActiveMQ, this is monitored via queue sizes. In event streaming systems like Apache Kafka or Azure Event Hubs, it's a bit more complex. Here, the term lag describes the difference between what has already been written and what has been read in the scope of a consumer group.","Event Hubs provide no built-in metric for monitoring this lag.","event-hub-lag-metrics bridges this gap and makes lag metrics available in Azure Monitor / Application Insights. Based on these metrics, you can define alerting rules, such as thresholds for when the lag exceeds a critical value."]}],[{"l":"Installation","p":["event-hub-lag-metrics is packaged as an Azure Managed Application. It can be installed in various ways:"]},{"l":"Bicep","p":["Installation"]},{"l":"az cli","p":["Installation"]},{"l":"Azure Marketplace","p":["You can install it via the Azure Portal via the following URL: Event Hub Lag Metrics on Azure Marketplace."]}],[{"l":"Installation via Bicep","p":["The following snippet installs event-hub-lag-metrics via Bicep. You can find a minimal, but complete example in a sample repo on GitHub.","This requires the Event Hub connection string, the storage account connection string, the application insights connection string and the container name that holds checkpoints/offsets. See the following sections on how these might be defined via Bicep and how to extract the connection strings."]},{"l":"Event Hubs"},{"l":"Storage Account"},{"l":"Application Insights"}],[{"l":"Installation via az cli","p":["The following snippet installs event-hub-lag-metrics via az cli.","Note that you have to customize this by specifying your subscription, resource group and the various connection strings."]}],[{"l":"Usage","p":["The following metrics are published to Application Insights:"]},{"i":"lag-by-topic-consumer-group-and-partition","l":"Lag by Topic, Consumer Group and Partition","p":["The name of the metrics is Event Hub Partition Lag. The value of the metric is the number of messages that have not yet been processed in the context of a certain event hub, partition and consumer group.","Custom dimensions of this metric are:","Event Hub Namespace: Name of the Event Hub Namespace.","Event Hub: Name of the Event Hub.","Consumer Group: Name of the consumer group.","Partition ID: Numerical identifier of the partition. If you have 4 partitions, values are 0, 1, 2 and 3.","This metric provides maximum flexibility as it includes information about partitions.","The lag for a particular Event Hub and Consumer Group can be extracted using the following Log Analytics / KQL query:"]},{"l":"Lag by Topic and Consumer Group","p":["The name of the metrics is Event Hub Lag. The value of the metric is the number of messages that have not yet been processed in the context of a certain event hub and consumer group. The values are already summed up over all partitions of the Event Hub. This level of detail is usually sufficient, as the overall lag across all partitions is most relevant.","Custom dimensions of this metric are:","Event Hub Namespace: Name of the Event Hub Namespace.","Event Hub: Name of the Event Hub.","Consumer Group: Name of the consumer group."]}],[{"l":"Defining Alerts","p":["event-hub-lag-metrics, as the name implies, simply publishes metrics. You can use regular Azure Monitor alerts to be notified when an alert exceeds a certain threshold.","Here is an example of defining the alert using Bicep:","You can find a complete example including an alert on GitHub"]}]]